"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.domain = void 0;
var cross_fetch_1 = require("cross-fetch");
var providers_1 = require("@ethersproject/providers");
var wallet_1 = require("@ethersproject/wallet");
var types_1 = require("./types");
var hubs_json_1 = require("../hubs.json");
var NAME = 'snapshot';
var VERSION = '0.1.4';
exports.domain = {
    name: NAME,
    version: VERSION
    // chainId: 1
};
var Client = /** @class */ (function () {
    function Client(address) {
        if (address === void 0) { address = hubs_json_1["default"][0]; }
        this.address = address;
    }
    Client.prototype.sign = function (web3, address, message, types) {
        return __awaiter(this, void 0, void 0, function () {
            var signer, data, sig;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (web3 instanceof wallet_1.Wallet)
                            signer = web3;
                        if (web3 instanceof providers_1.Web3Provider)
                            signer = web3.getSigner();
                        if (!message.from)
                            message.from = address;
                        if (!message.timestamp)
                            message.timestamp = parseInt((Date.now() / 1e3).toFixed());
                        data = { domain: exports.domain, types: types, message: message };
                        return [4 /*yield*/, signer._signTypedData(exports.domain, data.types, message)];
                    case 1:
                        sig = _a.sent();
                        console.log('Sign', { address: address, sig: sig, data: data });
                        return [4 /*yield*/, this.send({ address: address, sig: sig, data: data })];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Client.prototype.send = function (envelop) {
        return __awaiter(this, void 0, void 0, function () {
            var url, init;
            return __generator(this, function (_a) {
                url = this.address + "/api/msg";
                init = {
                    method: 'POST',
                    headers: {
                        Accept: 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(envelop)
                };
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        cross_fetch_1["default"](url, init)
                            .then(function (res) {
                            if (res.ok)
                                return resolve(res.json());
                            throw res;
                        })["catch"](function (e) { return e.json().then(function (json) { return reject(json); }); });
                    })];
            });
        });
    };
    Client.prototype.space = function (web3, address, message) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.sign(web3, address, message, types_1.spaceTypes)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Client.prototype.proposal = function (web3, address, message) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.sign(web3, address, message, types_1.proposalTypes)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Client.prototype.cancelProposal = function (web3, address, message) {
        return __awaiter(this, void 0, void 0, function () {
            var type2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        type2 = message.proposal.startsWith('0x');
                        return [4 /*yield*/, this.sign(web3, address, message, type2 ? types_1.cancelProposal2Types : types_1.cancelProposalTypes)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Client.prototype.vote = function (web3, address, message) {
        return __awaiter(this, void 0, void 0, function () {
            var type2, type;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        type2 = message.proposal.startsWith('0x');
                        type = type2 ? types_1.vote2Types : types_1.voteTypes;
                        if (['approval', 'ranked-choice'].includes(message.type))
                            type = type2 ? types_1.voteArray2Types : types_1.voteArrayTypes;
                        if (['quadratic', 'weighted'].includes(message.type)) {
                            type = type2 ? types_1.voteString2Types : types_1.voteStringTypes;
                            message.choice = JSON.stringify(message.choice);
                        }
                        // @ts-ignore
                        delete message.type;
                        return [4 /*yield*/, this.sign(web3, address, message, type)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Client.prototype.follow = function (web3, address, message) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.sign(web3, address, message, types_1.followTypes)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Client.prototype.unfollow = function (web3, address, message) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.sign(web3, address, message, types_1.unfollowTypes)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Client.prototype.subscribe = function (web3, address, message) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.sign(web3, address, message, types_1.subscribeTypes)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Client.prototype.unsubscribe = function (web3, address, message) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.sign(web3, address, message, types_1.unsubscribeTypes)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    Client.prototype.alias = function (web3, address, message) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.sign(web3, address, message, types_1.aliasTypes)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return Client;
}());
exports["default"] = Client;
